/*
 * generated by Xtext 2.25.0
 */
package robocalc.robocert

import org.eclipse.xtext.generator.IOutputConfigurationProvider
import robocalc.robocert.generator.RoboCertOutputConfigurationProvider
import org.eclipse.xtext.naming.IQualifiedNameConverter
import circus.robocalc.robochart.textual.RoboChartQualifiedNameConverter
import circus.robocalc.robochart.impl.RoboChartFactoryImplCustom
import circus.robocalc.robochart.RoboChartFactory
import robocalc.robocert.model.robocert.RobocertFactory
import robocalc.robocert.model.robocert.impl.RobocertFactoryImplCustom
import robocalc.robocert.generator.intf.seq.ActionGenerator
import robocalc.robocert.generator.tockcsp.seq.ActionGeneratorImpl
import robocalc.robocert.generator.intf.seq.SubsequenceGenerator
import robocalc.robocert.generator.tockcsp.seq.SequenceGenerator
import robocalc.robocert.generator.intf.seq.StepGenerator
import robocalc.robocert.generator.tockcsp.seq.StepGeneratorImpl
import org.eclipse.xtext.conversion.IValueConverterService

/** 
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class RoboCertRuntimeModule extends AbstractRoboCertRuntimeModule {
	def Class<? extends IOutputConfigurationProvider> bindIOutputConfigurationProvider() {
		RoboCertOutputConfigurationProvider
	}
	
	def Class<? extends ActionGenerator> bindActionGenerator() {
		ActionGeneratorImpl
	}
	
	def Class<? extends SubsequenceGenerator> bindSubsequenceGenerator() {
		SequenceGenerator
	}
	
	def Class<? extends StepGenerator> bindStepGenerator() {
		StepGeneratorImpl
	}
	
	/**
	 * Binds the RoboChart name converter
	 * (so that qualified names are '::'-delimited).
	 */
	def Class<? extends IQualifiedNameConverter> bindIQualifiedNameConverter() {
		RoboChartQualifiedNameConverter
	}
	
	override Class<? extends IValueConverterService> bindIValueConverterService() {
		RoboCertValueConverterService
	}
	
	/**
	 * Binds the RoboCert custom factory.
	 */
	def Class<? extends RobocertFactory> bindRobocertFactory() {
		// TODO(@MattWindsor91): is this the right way to do this?
		RobocertFactoryImplCustom
	}	
	
	/**
	 * Binds the RoboChart custom factory.
	 */
	def Class<? extends RoboChartFactory> bindRoboChartFactory() {
		RoboChartFactoryImplCustom
	}	
}
