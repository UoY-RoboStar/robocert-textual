/*
 * generated by Xtext 2.25.0
 */
package robocalc.robocert;

import org.eclipse.xtext.generator.IOutputConfigurationProvider;
import robocalc.robocert.generator.RoboCertOutputConfigurationProvider;
import org.eclipse.xtext.naming.IQualifiedNameConverter;
import circus.robocalc.robochart.textual.RoboChartQualifiedNameConverter;
import circus.robocalc.robochart.impl.RoboChartFactoryImplCustom;
import circus.robocalc.robochart.RoboChartFactory;
import robocalc.robocert.model.robocert.RoboCertFactory;
import robocalc.robocert.generator.intf.seq.ActionGenerator;
import robocalc.robocert.generator.tockcsp.seq.action.ActionGeneratorImpl;
import robocalc.robocert.generator.intf.seq.SubsequenceGenerator;
import robocalc.robocert.generator.intf.seq.StepGenerator;

import org.eclipse.xtext.conversion.IValueConverterService;
import robocalc.robocert.generator.tockcsp.seq.SubsequenceGeneratorImpl;
import robocalc.robocert.generator.tockcsp.seq.step.StepGeneratorImpl;
import robocalc.robocert.model.robocert.impl.RoboCertFactoryImplCustom;

/** 
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
public class RoboCertRuntimeModule extends AbstractRoboCertRuntimeModule {
	public Class<? extends IOutputConfigurationProvider> bindIOutputConfigurationProvider() {
		return RoboCertOutputConfigurationProvider.class;
	}

	public Class<? extends ActionGenerator> bindActionGenerator() {
		return ActionGeneratorImpl.class;
	}

	public Class<? extends SubsequenceGenerator> bindSubsequenceGenerator() {
		return SubsequenceGeneratorImpl.class;
	}

	public Class<? extends StepGenerator> bindStepGenerator() {
		return StepGeneratorImpl.class;
	}

	/**
	 * Binds the RoboChart name converter
	 * (so that qualified names are '::'-delimited).
	 */
	public Class<? extends IQualifiedNameConverter> bindIQualifiedNameConverter() {
		return RoboChartQualifiedNameConverter.class;
	}

	@Override
	public Class<? extends IValueConverterService> bindIValueConverterService() {
		return RoboCertValueConverterService.class;
	}

	/**
	 * Binds the RoboCert custom factory.
	 */
	public Class<? extends RoboCertFactory> bindRoboCertFactory() {
		// TODO(@MattWindsor91): is this the right way to do this?
		return RoboCertFactoryImplCustom.class;
	}

	/**
	 * Binds the RoboChart custom factory.
	 */
	public Class<? extends RoboChartFactory> bindRoboChartFactory() {
		return RoboChartFactoryImplCustom.class;
	}
}
