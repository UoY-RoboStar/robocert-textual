/*
 * generated by Xtext 2.25.0
 */
package robocalc.robocert.formatting2

import circus.robocalc.robochart.textual.formatting2.RoboChartFormatter
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.IFormattableDocument
import robocalc.robocert.model.robocert.Sequence
import robocalc.robocert.services.RoboCertGrammarAccess

class RoboCertFormatter extends RoboChartFormatter {
	
	@Inject extension RoboCertGrammarAccess

	def dispatch void format(robocalc.robocert.model.robocert.Package _package, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (cSPFragment : _package.cspFragments) {
			cSPFragment.format
		}
		for (sequence : _package.sequences) {
			sequence.format
		}
		for (assertion : _package.assertions) {
			assertion.format
		}
	}

	def dispatch void format(Sequence sequence, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		sequence.target.format
		sequence.world.format
		for (sequenceStep : sequence.steps) {
			sequenceStep.format
		}
	}
	
	// TODO: implement for SequenceStep, ArrowSequenceAction, LooseSequenceGap, ArrowSet, Assertion
}
