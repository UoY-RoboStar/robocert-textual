-- *************************************************************************
-- Copyright (c) 2021 University of York and others
--
-- This program and the accompanying materials are made available under the
-- terms of the Eclipse Public License 2.0 which is available at
-- http://www.eclipse.org/legal/epl-2.0.
--
-- SPDX-License-Identifier: EPL-2.0
--
-- Contributors:
--   Matt Windsor - initial definition
-- *************************************************************************

{- This file contains definitions relied upon by the RoboCert sequence CSP
   semantics.
   
   It is intended to be auto-included into the output of the RoboCert CSP
   generator, and expects the RoboChart 'core_timed_defs' to be open. -}

{-
 - Memory
 -}

-- Memory operations.
datatype MemOp = get | set

{-
 - Actions
 -}

-- Combinator for allowing an action to be put off, perhaps indefinitely.
Cold(A) = A |~| tock -> Cold(A)


Timed(OneStep) {
  -- Semantics of an until fragment.
  --
  -- TODO(@MattWindsor91): the precise tick-tock semantics of gaps is currently
  -- unstable, as it is unclear as to whether gaps should:
  --
  -- 1) always be emitted vs only emitted when active;
  -- 2) permit timestop;
  -- 3) implicitly make P cold.
  --
  -- This, coupled with making the generator always emit, seems to be the least
  -- worst solution for now (2021-09-09).
  Until(intraMessages__, initial__)(P__) = TCHAOS(diff(intraMessages__, initial__)) /\ P__
}

{-
 - Loops
 -}

-- Use the standard FDR loop function for infinite loops.
external loop

-- Loops P exactly bnd times.
loop_exactly(bnd)(P) =
        let L(x) =
                if x <= 0 then SKIP else P; L(x-1)
        within L(bnd)

-- Loops P between lb and ub times.
loop_between(lb, ub)(P) =
        let L(x) =
                if x <= 0 then SKIP else SKIP |~| P; L(x-1)
        within loop_exactly(lb)(P); L(ub - lb)
		
-- Loops P at least lb times.
loop_at_least(lb)(P) =
        let L = SKIP |~| P; L
        within loop_exactly(lb)(P); L