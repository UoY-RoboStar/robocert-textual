-- *************************************************************************
-- Copyright (c) 2021, 2022 University of York and others
--
-- This program and the accompanying materials are made available under the
-- terms of the Eclipse Public License 2.0 which is available at
-- http://www.eclipse.org/legal/epl-2.0.
--
-- SPDX-License-Identifier: EPL-2.0
--
-- Contributors:
--   Matt Windsor - initial definition
-- *************************************************************************

{- This file contains definitions relied upon by the RoboCert sequence CSP
   semantics.
   
   It is intended to be auto-included into the output of the RoboCert CSP
   generator, and expects the RoboChart 'core_timed_defs' to be open. -}

-- This is the version of robocert_seq_defs.csp last updated on: 2022-02-03

{-
 - Memory
 -}

-- Memory operations.
datatype MemOp = get | set


{-
 - Occurrences
 -}

-- Combinator for allowing an occurrence to be put off, perhaps indefinitely.
Cold(A) = A |~| tock -> Cold(A)


{-
 - Block fragments
 -
 - Every block fragment gets translated to the form F(Body), where F is one of the functions below,
 - possibly partially applied.
 -}

Timed(OneStep) {
  -- Semantics of an until fragment.
  Until(intraMessages__, initial__)(P__) =
    TCHAOS(diff(intraMessages__, initial__)) /\ P__

  -- Semantics of an optionality fragment.
  Opt(P__) = P__ |~| SKIP

  -- Semantics of a lower-bounded duration fragment.
  DurationLB(lb__)(P__) = P__ ||| Cold(WAIT(lb__))

  -- Semantics of an upper-bounded duration fragment.
  DurationUB(ub__)(P__) = EndBy(P__, ub__)

  -- Semantics of a both-bounded duration fragment.
  Duration(lb__, ub__)(P__) = DurationUB(ub__)(DurationLB(lb__)(P__))
}

-- Use the standard FDR loop function for infinite loops.
external loop

-- Loops P exactly bnd times.
loop_exactly(bnd)(P) =
  let L(x) =
    if x <= 0 then SKIP else P; L(x-1)
  within L(bnd)

-- Loops P between lb and ub times.
loop_between(lb, ub)(P) =
  let L(x) =
    if x <= 0 then SKIP else SKIP |~| P; L(x-1)
  within loop_exactly(lb)(P); L(ub - lb)
		
-- Loops P at least lb times.
loop_at_least(lb)(P) =
  let L = SKIP |~| P; L
  within loop_exactly(lb)(P); L