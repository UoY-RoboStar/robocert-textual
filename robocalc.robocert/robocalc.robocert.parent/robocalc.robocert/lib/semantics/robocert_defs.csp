-- *************************************************************************
-- Copyright (c) 2021 University of York and others
--
-- This program and the accompanying materials are made available under the
-- terms of the Eclipse Public License 2.0 which is available at
-- http://www.eclipse.org/legal/epl-2.0.
--
-- SPDX-License-Identifier: EPL-2.0
--
-- Contributors:
--   Matt Windsor - initial definition
-- *************************************************************************

{- This file contains definitions relied upon by the RoboCert CSP semantics.
   It is intended to be auto-included into the output of the RoboCert CSP
   generator. -}

-- These files should have been copied by the RoboChart generator.
include "defs/state_timed_defs.csp"
include "defs/core_timed_defs.csp"
include "defs/robochart_defs.csp"

{-
 - Gaps
 -}
 
-- The semantics of an active gap.
--
-- TODO(@MattWindsor91 14/07/21): it is not yet fully clear if omitting this
--   is semantically OK when the gap is inactive; there is a semantic
--   difference between P and RUN(tock) /\ P in general but I believe that
--   there is not one for any P that can be generated by a RoboCert action.
gap(gap_evts, action_evts) = RUN(diff(union({tock}, gap_evts), action_evts))

{-
 - Loops
 -}

-- Use the standard FDR loop function for infinite loops.
external loop

-- Loops P exactly bnd times.
loop_exactly(bnd)(P) =
        let L(x) =
                if x <= 0 then SKIP else P; L(x-1)
        within L(bnd)

-- Loops P between lb and ub times.
loop_between(lb, ub)(P) =
        let L(x) =
                if x <= 0 then SKIP else SKIP |~| P; L(x-1)
        within loop_exactly(lb)(P); L(ub - lb)
		
-- Loops P at least lb times.
loop_at_least(lb)(P) =
        let L = SKIP |~| P; L
        within loop_exactly(lb)(P); L
		
