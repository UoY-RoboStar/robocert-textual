/*
 * generated by Xtext 2.25.0
 */
package robocalc.robocert.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(RoboCertInjectorProvider)
class RoboCertParsingTest {
	@Inject
	ParseHelper<robocalc.robocert.model.robocert.RAPackage> parseHelper
	
	// TODO(@MattWindsor91): find out how on earth to use the validation helper here;
	// the problem is that it's impossible to construct a valid and meaningful
	// RAPackage that doesn't refer to things in an existing RCPackage.
	//
	// maybe inject them into the model post-facto?
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			sequence group S (module M -> world) {
				sequence Test {
					anything until end
				}
			}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
